d:\anaconda3\envs\pytorch\lib\site-packages\sklearn\manifold\_t_sne.py:996: FutureWarning: The PCA initialization in TSNE will change to have the standard deviation of PC1 equal to 1e-4 in 1.2. This will ensure better convergence.
  warnings.warn(
temperature [C]
Al-concentration [at.%]
O-concentration [at.%]
ionization degree [a.u.]
average ion energy [eV]
pressure [Pa]
0 -> 15
16 -> 31
32 -> 47
48 -> 63
64 -> 79
80 -> 95
96 -> 111
112 -> 122
torch.Size([32, 1, 64, 64])
tensor([0.6154, 0.2035, 0.0000, 0.8182, 0.2008, 0.0000], dtype=torch.float64)
tensor(4., dtype=torch.float64)
cpu
C:\Users\Ty Zhang\AppData\Local\Temp\ipykernel_22080\63214063.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  y = torch.tensor(y).to(device).float()
C:\Users\Ty Zhang\AppData\Local\Temp\ipykernel_22080\63214063.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  y = torch.tensor(y).to(device).float()
tensor([[0.6000],
        [0.0000],
        [0.0000],
        [0.0000],
        [1.0000],
        [0.0000]])
tensor([4., 1., 1., 1., 6., 1.])
tensor([4., 1., 1., 1., 6., 1.])
tensor([[0.6000],
        [0.0000],
        [0.0000],
        [0.0000],
        [1.0000],
        [0.0000]])
tensor([[0.6000],
        [0.0000],
        [0.0000],
        [0.0000],
        [1.0000],
        [0.0000]])
tensor([[0.6000],
        [0.0000],
        [0.0000],
        [0.0000],
        [1.0000],
        [0.0000]])
tensor([[0.6000],
        [0.0000],
        [0.0000],
        [0.0000],
        [1.0000],
        [0.0000]])
tensor([[0.6000],
        [0.0000],
        [0.0000],
        [0.0000],
        [1.0000],
        [0.0000]])
tensor([[0.6000],
        [0.0000],
        [0.0000],
        [0.0000],
        [1.0000],
        [0.0000]])
tensor([[0.6000],
        [0.0000],
        [0.0000],
        [0.0000],
        [1.0000],
        [0.0000]])
tensor([[0.6000],
        [0.0000],
        [0.0000],
        [0.0000],
        [1.0000],
        [0.0000]])
tensor([[0.6000],
        [0.0000],
        [0.0000],
        [0.0000],
        [1.0000],
        [0.0000]])
tensor([[0.6000],
        [0.0000],
        [0.0000],
        [0.0000],
        [1.0000],
        [0.0000]])
tensor([[0.6000],
        [0.0000],
        [0.0000],
        [0.0000],
        [1.0000],
        [0.0000]])
tensor([0.2308, 0.3679, 1.0000, 0.3636, 0.0298, 0.0000])
[0.23076923 0.36791502 1.         0.36363636 0.02979828 0.        ]
{"BATCH_SIZE": "int", "BINS": "int", "BOX_SIZE": "int", "CROP_PER_IMAGE": "int", "D": "Discriminator", "DATA_PATH": "str", "D_opt": "Adam", "Dataset": "type", "Discriminator": "type", "EXTRINSIC_DIM": "int", "G": "Generator", "G_opt": "Adam", "Generator": "type", "GetData": "type", "IMAGE_SUBPATH": "str", "Image": "module", "LATENT_DIM": "int", "MinMaxScaler": "type", "N_CHANNELS": "int", "SX": "int", "SY": "int", "TSNE": "type", "WEIGHTS": "ndarray", "WEIGHTS_SUM": "float64", "XS": "ndarray", "YS": "ndarray", "YS_scaled": "ndarray", "Y_COLUMNS": "list", "Y_COLUMNS_BINNING": "list", "Y_column": "str", "axs": "ndarray", "b": "int", "batch_count": "int", "batch_indices": "ndarray", "batch_size": "int", "beta1": "float", "binning_df": "DataFrame", "binning_labels_dict": "dict", "bins": "ndarray", "box": "tuple", "cnt": "ndarray", "col_name": "str", "count_bins_df": "DataFrame", "criterion": "BCELoss", "dataloader": "DataLoader", "dataroot": "str", "dataset": "GetData", "device": "device", "df": "DataFrame", "fig": "Figure", "fname": "str", "generate_fake_samples": "function", "generate_latent_points": "function", "h": "tuple", "im": "JpegImageFile", "image_size": "int", "ind": "int32", "label_dim": "int", "latent_dim": "int", "left": "int", "lrD": "float", "lrG": "float", "max_count": "int", "model": "OrderedDict", "nc": "int", "ndf": "int", "ngf": "int", "ngpu": "int", "nn": "module", "np": "module", "num_epochs": "int", "nz": "int", "os": "module", "out": "Tensor", "pd": "module", "plt": "module", "real_batch": "list", "rep": "int", "scaler": "MinMaxScaler", "sub_image": "Image", "sub_image_np": "ndarray", "sys": "module", "torch": "module", "tqdm": "type", "train_GAN": "function", "tsne": "TSNE", "upper": "int", "vutils": "module", "wandb": "module", "weights_init": "function", "workers": "int", "x": "Tensor", "y": "Tensor", "y_scaled": "ndarray", "y_tsne": "ndarray"}
{"BATCH_SIZE": "int", "BINS": "int", "BOX_SIZE": "int", "CROP_PER_IMAGE": "int", "D": "Discriminator", "DATA_PATH": "str", "D_opt": "Adam", "Dataset": "type", "Discriminator": "type", "EXTRINSIC_DIM": "int", "G": "Generator", "G_opt": "Adam", "Generator": "type", "GetData": "type", "IMAGE_SUBPATH": "str", "Image": "module", "LATENT_DIM": "int", "MinMaxScaler": "type", "N_CHANNELS": "int", "SX": "int", "SY": "int", "TSNE": "type", "WEIGHTS": "ndarray", "WEIGHTS_SUM": "float64", "XS": "ndarray", "YS": "ndarray", "YS_scaled": "ndarray", "Y_COLUMNS": "list", "Y_COLUMNS_BINNING": "list", "Y_column": "str", "axs": "ndarray", "b": "int", "batch_count": "int", "batch_indices": "ndarray", "batch_size": "int", "beta1": "float", "binning_df": "DataFrame", "binning_labels_dict": "dict", "bins": "ndarray", "box": "tuple", "cnt": "ndarray", "col_name": "str", "count_bins_df": "DataFrame", "criterion": "BCELoss", "dataloader": "DataLoader", "dataroot": "str", "dataset": "GetData", "device": "device", "df": "DataFrame", "fig": "Figure", "fname": "str", "generate_fake_samples": "function", "generate_latent_points": "function", "h": "tuple", "im": "JpegImageFile", "image_size": "int", "ind": "int32", "label_dim": "int", "latent_dim": "int", "left": "int", "lrD": "float", "lrG": "float", "max_count": "int", "model": "OrderedDict", "nc": "int", "ndf": "int", "ngf": "int", "ngpu": "int", "nn": "module", "np": "module", "num_epochs": "int", "nz": "int", "os": "module", "out": "Tensor", "pd": "module", "plt": "module", "real_batch": "list", "rep": "int", "scaler": "MinMaxScaler", "sub_image": "Image", "sub_image_np": "ndarray", "sys": "module", "torch": "module", "tqdm": "type", "train_GAN": "function", "tsne": "TSNE", "upper": "int", "vutils": "module", "wandb": "module", "weights_init": "function", "workers": "int", "x": "Tensor", "y": "Tensor", "y_scaled": "ndarray", "y_tsne": "ndarray"}
{"shape": "(2,)", "count": 2, "type": "ndarray"}
{"shape": "(2,)", "count": 2, "type": "ndarray"}
{"shape": "(11,)", "count": 11, "type": "ndarray"}
{"shape": "(11,)", "count": 11, "type": "ndarray"}
{"shape": "", "count": 6, "type": "dict"}
{"shape": "(7,)", "count": 7, "type": "ndarray"}
{"shape": "(6,)", "count": 6, "type": "ndarray"}
{"shape": "(1, 1, 64, 64)", "count": 1, "type": "Tensor"}
{"shape": "(64, 64, 1)", "count": 64, "type": "ndarray"}
{"BATCH_SIZE": "int", "BINS": "int", "BOX_SIZE": "int", "CROP_PER_IMAGE": "int", "D": "Discriminator", "DATA_PATH": "str", "D_opt": "Adam", "Dataset": "type", "Discriminator": "type", "EXTRINSIC_DIM": "int", "G": "Generator", "G_opt": "Adam", "Generator": "type", "GetData": "type", "IMAGE_SUBPATH": "str", "Image": "module", "LATENT_DIM": "int", "MinMaxScaler": "type", "N_CHANNELS": "int", "SX": "int", "SY": "int", "TSNE": "type", "WEIGHTS": "ndarray", "WEIGHTS_SUM": "float64", "XS": "ndarray", "YS": "ndarray", "YS_scaled": "ndarray", "Y_COLUMNS": "list", "Y_COLUMNS_BINNING": "list", "Y_column": "str", "axs": "ndarray", "b": "int", "batch_count": "int", "batch_indices": "ndarray", "batch_size": "int", "beta1": "float", "binning_df": "DataFrame", "binning_labels_dict": "dict", "bins": "ndarray", "box": "tuple", "cnt": "ndarray", "col_name": "str", "count_bins_df": "DataFrame", "criterion": "BCELoss", "dataloader": "DataLoader", "dataroot": "str", "dataset": "GetData", "device": "device", "df": "DataFrame", "fig": "Figure", "fname": "str", "generate_fake_samples": "function", "generate_latent_points": "function", "h": "tuple", "im": "JpegImageFile", "image_size": "int", "ind": "int32", "label_dim": "int", "latent_dim": "int", "left": "int", "lrD": "float", "lrG": "float", "max_count": "int", "model": "OrderedDict", "nc": "int", "ndf": "int", "ngf": "int", "ngpu": "int", "nn": "module", "np": "module", "num_epochs": "int", "nz": "int", "os": "module", "out": "Tensor", "pd": "module", "plt": "module", "real_batch": "list", "rep": "int", "scaler": "MinMaxScaler", "sub_image": "Image", "sub_image_np": "ndarray", "sys": "module", "torch": "module", "tqdm": "type", "train_GAN": "function", "tsne": "TSNE", "upper": "int", "vutils": "module", "wandb": "module", "weights_init": "function", "workers": "int", "x": "Tensor", "y": "Tensor", "y_scaled": "ndarray", "y_tsne": "ndarray"}
{"BATCH_SIZE": "int", "BINS": "int", "BOX_SIZE": "int", "CROP_PER_IMAGE": "int", "D": "Discriminator", "DATA_PATH": "str", "D_opt": "Adam", "Dataset": "type", "Discriminator": "type", "EXTRINSIC_DIM": "int", "G": "Generator", "G_opt": "Adam", "Generator": "type", "GetData": "type", "IMAGE_SUBPATH": "str", "Image": "module", "LATENT_DIM": "int", "MinMaxScaler": "type", "N_CHANNELS": "int", "SX": "int", "SY": "int", "TSNE": "type", "WEIGHTS": "ndarray", "WEIGHTS_SUM": "float64", "XS": "ndarray", "YS": "ndarray", "YS_scaled": "ndarray", "Y_COLUMNS": "list", "Y_COLUMNS_BINNING": "list", "Y_column": "str", "axs": "ndarray", "b": "int", "batch_count": "int", "batch_indices": "ndarray", "batch_size": "int", "beta1": "float", "binning_df": "DataFrame", "binning_labels_dict": "dict", "bins": "ndarray", "box": "tuple", "cnt": "ndarray", "col_name": "str", "count_bins_df": "DataFrame", "criterion": "BCELoss", "dataloader": "DataLoader", "dataroot": "str", "dataset": "GetData", "device": "device", "df": "DataFrame", "fig": "Figure", "fname": "str", "generate_fake_samples": "function", "generate_latent_points": "function", "h": "tuple", "im": "JpegImageFile", "image_size": "int", "ind": "int32", "label_dim": "int", "latent_dim": "int", "left": "int", "lrD": "float", "lrG": "float", "max_count": "int", "model": "OrderedDict", "nc": "int", "ndf": "int", "ngf": "int", "ngpu": "int", "nn": "module", "np": "module", "num_epochs": "int", "nz": "int", "os": "module", "out": "Tensor", "pd": "module", "plt": "module", "real_batch": "list", "rep": "int", "scaler": "MinMaxScaler", "sub_image": "Image", "sub_image_np": "ndarray", "sys": "module", "torch": "module", "tqdm": "type", "train_GAN": "function", "tsne": "TSNE", "upper": "int", "vutils": "module", "wandb": "module", "weights_init": "function", "workers": "int", "x": "Tensor", "y": "Tensor", "y_scaled": "ndarray", "y_tsne": "ndarray"}
{"shape": "(2,)", "count": 2, "type": "ndarray"}
{"shape": "(2,)", "count": 2, "type": "ndarray"}
{"shape": "(11,)", "count": 11, "type": "ndarray"}
{"shape": "(11,)", "count": 11, "type": "ndarray"}
{"shape": "", "count": 6, "type": "dict"}
{"shape": "", "count": 6, "type": "dict"}
{"shape": "(7,)", "count": 7, "type": "ndarray"}
{"shape": "(7,)", "count": 7, "type": "ndarray"}
{"shape": "(6,)", "count": 6, "type": "ndarray"}
{"shape": "(6,)", "count": 6, "type": "ndarray"}
{"columns": [{"key": "file name", "name": "file name", "type": "object"}, {"key": "sample id", "name": "sample id", "type": "int64"}, {"key": "position", "name": "position", "type": "int64"}, {"key": "temperature [C]", "name": "temperature [C]", "type": "int64"}, {"key": "Al-concentration [at.%]", "name": "Al-concentration [at.%]", "type": "float64"}, {"key": "O-concentration [at.%]", "name": "O-concentration [at.%]", "type": "int64"}, {"key": "ionization degree [a.u.]", "name": "ionization degree [a.u.]", "type": "float64"}, {"key": "average ion energy [eV]", "name": "average ion energy [eV]", "type": "float64"}, {"key": "pressure [Pa]", "name": "pressure [Pa]", "type": "float64"}, {"key": "label", "name": "label", "type": "object"}, {"key": "temperature [C]_binning", "name": "temperature [C]_binning", "type": "int64"}, {"key": "Al-concentration [at.%]_binning", "name": "Al-concentration [at.%]_binning", "type": "int64"}, {"key": "O-concentration [at.%]_binning", "name": "O-concentration [at.%]_binning", "type": "int64"}, {"key": "ionization degree [a.u.]_binning", "name": "ionization degree [a.u.]_binning", "type": "int64"}, {"key": "average ion energy [eV]_binning", "name": "average ion energy [eV]_binning", "type": "int64"}, {"key": "pressure [Pa]_binning", "name": "pressure [Pa]_binning", "type": "int64"}, {"key": "index", "name": "index", "type": "int64"}, {"key": "T", "name": "T", "type": "int64"}, {"key": "weight", "name": "weight", "type": "float64"}], "indexColumn": "index", "rowCount": 123}
{"columns":["file name","sample id","position","temperature [C]","Al-concentration [at.%]","O-concentration [at.%]","ionization degree [a.u.]","average ion energy [eV]","pressure [Pa]","label","temperature [C]_binning","Al-concentration [at.%]_binning","O-concentration [at.%]_binning","ionization degree [a.u.]_binning","average ion energy [eV]_binning","pressure [Pa]_binning","index","T","weight"],"index":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],"data":[["3824_8_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3824,8,500,0.0,0,0.333333333,203.3333333,0.5,"smooth-facetted",4,1,1,2,6,1,19,1,8.0],["3824_4_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3824,4,500,0.0,0,0.142857143,201.4285714,0.5,"smooth-facetted",4,1,1,1,6,1,18,7,1.1428571429],["3824_6_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3824,6,500,0.0,0,0.2,202.0,0.5,"smooth-facetted",4,1,1,1,6,1,18,7,1.1428571429],["3824_7_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3824,7,500,0.0,0,0.25,202.5,0.5,"smooth-facetted",4,1,1,1,6,1,18,7,1.1428571429],["3824_1_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3824,1,500,0.0,0,0.1,201.0,0.5,"smooth-facetted",4,1,1,1,6,1,18,7,1.1428571429],["3824_3_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3824,3,500,0.0,0,0.125,201.25,0.5,"smooth-facetted",4,1,1,1,6,1,18,7,1.1428571429],["3824_5_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3824,5,500,0.0,0,0.166666667,201.6666667,0.5,"smooth-facetted",4,1,1,1,6,1,18,7,1.1428571429],["3824_2_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3824,2,500,0.0,0,0.111111111,201.1111111,0.5,"smooth-facetted",4,1,1,1,6,1,18,7,1.1428571429],["4203_800_Pos1_50kx.jpg",4203,1,800,0.0,3,0.1,1.0,0.5,"large facetted",6,1,2,1,1,1,62,4,2.0],["4203_800_Pos2_50kx.jpg",4203,2,800,0.0,3,0.12195122,2.8,0.5,"large facetted",6,1,2,1,1,1,62,4,2.0],["4203_800_Pos3_50kx.jpg",4203,3,800,0.0,3,0.15625,4.6,0.5,"large facetted",6,1,2,1,1,1,62,4,2.0],["4203_800_Pos4_50kx.jpg",4203,4,800,0.0,3,0.217391304,6.4,0.5,"large facetted",6,1,2,1,1,1,62,4,2.0],["0001208_400-Pos2-50kx.jpg",1208,2,400,49.36,10,0.5,6.69893,0.5,"fine grained",3,4,6,3,1,1,16,3,2.6666666667],["0001208_400-Pos3-50kx.jpg",1208,3,400,43.86,10,0.5,6.31924,0.5,"fine grained",3,4,6,3,1,1,16,3,2.6666666667],["0001208_400-Pos4-50kx.jpg",1208,4,400,38.38,10,0.5,6.1351,0.5,"fine grained",3,4,6,3,1,1,16,3,2.6666666667],["1663-Pos2-50kx_ergebnis.jpg",1663,2,500,64.29359,0,1.0,41.75453,0.5,"fine grained",4,6,1,5,2,1,51,2,4.0],["1663-Pos1-50kx_ergebnis.jpg",1663,1,500,69.84707,0,1.0,42.1438,0.5,"fine grained",4,6,1,5,2,1,51,2,4.0],["1680-Pos4-50kx_ergebnis.jpg",1680,4,500,50.73767,0,1.0,106.20415,0.5,"featureless",4,5,1,5,4,1,47,2,4.0],["1680-Pos3-50kx_ergebnis.jpg",1680,3,500,59.97647,0,1.0,106.36527,0.5,"featureless",4,5,1,5,4,1,47,2,4.0],["0001208_600-Pos2-50kx.jpg",1208,2,600,49.36,10,0.5,6.69893,0.5,"facetted",5,4,6,3,1,1,60,3,2.6666666667],["0001208_600-Pos4-50kx.jpg",1208,4,600,38.38,10,0.5,6.1351,0.5,"facetted",5,4,6,3,1,1,60,3,2.6666666667],["0001208_600-Pos3-50kx.jpg",1208,3,600,43.86,10,0.5,6.31924,0.5,"facetted",5,4,6,3,1,1,60,3,2.6666666667],["4203_300_Pos05_50kx.jpg",4203,5,300,0.0,3,0.357142857,8.2,0.5,"facetted-oriented",3,1,2,2,1,1,12,2,4.0],["4203_400_Pos05_50kx.jpg",4203,5,400,0.0,3,0.357142857,8.2,0.5,"facetted-oriented",3,1,2,2,1,1,12,2,4.0],["1697_Pos6_50kx_cropped.jpg",1697,6,500,32.4341,0,1.2,100.0,1.0,"smooth-facetted",4,3,1,6,3,6,39,1,8.0],["1678-Pos1-50kx_ergebnis.jpg",1678,1,500,68.97839,0,1.2,39.34222,1.0,"fine grained",4,6,1,6,2,6,53,2,4.0],["1678-Pos2-50kx_ergebnis.jpg",1678,2,500,62.67405,0,1.2,38.85794,1.0,"fine grained",4,6,1,6,2,6,53,2,4.0],["1660-Pos6-50kx_ergebnis.jpg",1660,6,500,27.95631,0,1.0,6.73417,0.5,"facetted",4,3,1,5,1,1,35,2,4.0],["1660-Pos5-50kx_ergebnis.jpg",1660,5,500,36.46607,0,1.0,6.04303,0.5,"facetted",4,3,1,5,1,1,35,2,4.0],["3824_10_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3824,10,500,0.0,0,1.0,210.0,0.5,"smooth-facetted",4,1,1,5,6,1,24,1,8.0],["0001208_200-Pos2-50kx.jpg",1208,2,200,49.36,10,0.5,6.69893,0.5,"fine grained",2,4,6,3,1,1,9,3,2.6666666667],["0001208_200-Pos3-50kx.jpg",1208,3,200,43.86,10,0.5,6.31924,0.5,"fine grained",2,4,6,3,1,1,9,3,2.6666666667],["0001208_200-Pos4-50kx.jpg",1208,4,200,38.38,10,0.5,6.1351,0.5,"fine grained",2,4,6,3,1,1,9,3,2.6666666667],["3845_1_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3845,1,20,0.0,0,0.1,1.0,0.5,"facetted-oriented",1,1,1,1,1,1,0,7,1.1428571429],["3845_5_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3845,5,20,0.0,0,0.166666667,1.666666667,0.5,"facetted-oriented",1,1,1,1,1,1,0,7,1.1428571429],["3845_4_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3845,4,20,0.0,0,0.142857143,1.428571429,0.5,"facetted-oriented",1,1,1,1,1,1,0,7,1.1428571429],["3845_2_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3845,2,20,0.0,0,0.111111111,1.111111111,0.5,"facetted-oriented",1,1,1,1,1,1,0,7,1.1428571429],["3845_6_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3845,6,20,0.0,0,0.2,2.0,0.5,"facetted-oriented",1,1,1,1,1,1,0,7,1.1428571429],["3845_3_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3845,3,20,0.0,0,0.125,1.25,0.5,"facetted-oriented",1,1,1,1,1,1,0,7,1.1428571429],["3845_7_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3845,7,20,0.0,0,0.25,2.5,0.5,"facetted-oriented",1,1,1,1,1,1,0,7,1.1428571429],["1678-Pos9-50kx_ergebnis.jpg",1678,9,500,6.21288,0,1.2,38.86007,1.0,"facetted",4,1,1,6,2,6,25,2,4.0],["1678-Pos8-50kx_ergebnis.jpg",1678,8,500,9.38411,0,1.2,38.58036,1.0,"facetted",4,1,1,6,2,6,25,2,4.0],["3845_8_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3845,8,20,0.0,0,0.333333333,3.333333333,0.5,"facetted-oriented",1,1,1,2,1,1,1,1,8.0],["4203_300_Pos01_50kx.jpg",4203,1,300,0.0,3,0.1,1.0,0.5,"facetted-oriented",3,1,2,1,1,1,11,8,1.0],["4203_300_Pos04_50kx.jpg",4203,4,300,0.0,3,0.217391304,6.4,0.5,"facetted-oriented",3,1,2,1,1,1,11,8,1.0],["4203_400_Pos03_50kx.jpg",4203,3,400,0.0,3,0.15625,4.6,0.5,"facetted-oriented",3,1,2,1,1,1,11,8,1.0],["4203_400_Pos04_50kx.jpg",4203,4,400,0.0,3,0.217391304,6.4,0.5,"facetted-oriented",3,1,2,1,1,1,11,8,1.0],["4203_300_Pos03_50kx.jpg",4203,3,300,0.0,3,0.15625,4.6,0.5,"facetted-oriented",3,1,2,1,1,1,11,8,1.0],["4203_400_Pos02_50kx.jpg",4203,2,400,0.0,3,0.12195122,2.8,0.5,"facetted-oriented",3,1,2,1,1,1,11,8,1.0],["4203_400_Pos01_50kx.jpg",4203,1,400,0.0,3,0.1,1.0,0.5,"facetted-oriented",3,1,2,1,1,1,11,8,1.0],["4203_300_Pos02_50kx.jpg",4203,2,300,0.0,3,0.12195122,2.8,0.5,"facetted-oriented",3,1,2,1,1,1,11,8,1.0],["4203_200_Pos03_50kx.jpg",4203,3,200,0.0,3,0.15625,4.6,0.5,"facetted-oriented",2,1,2,1,1,1,4,4,2.0],["4203_200_Pos02_50kx.jpg",4203,2,200,0.0,3,0.12195122,2.8,0.5,"facetted-oriented",2,1,2,1,1,1,4,4,2.0],["4203_200_Pos04_50kx.jpg",4203,4,200,0.0,3,0.217391304,6.4,0.5,"facetted-oriented",2,1,2,1,1,1,4,4,2.0],["4203_200_Pos01_50kx.jpg",4203,1,200,0.0,3,0.1,1.0,0.5,"facetted-oriented",2,1,2,1,1,1,4,4,2.0],["4203_650_Pos05_50kx.jpg",4203,5,650,0.0,3,0.357142857,8.2,0.5,"facetted",5,1,2,2,1,1,56,1,8.0],["1660-Pos4-50kx_ergebnis.jpg",1660,4,500,44.99311,0,1.0,6.20415,0.5,"facetted",4,4,1,5,1,1,40,1,8.0],["0001208_200-Pos5-50kx.jpg",1208,5,200,32.9,10,0.5,6.43797,0.5,"fine grained",2,3,6,3,1,1,8,2,4.0],["0001208_200-Pos6-50kx.jpg",1208,6,200,27.42,10,0.5,7.22784,0.5,"fine grained",2,3,6,3,1,1,8,2,4.0],["0001208_200-Pos7-50kx.jpg",1208,7,200,21.98,10,0.5,7.88422,0.5,"fine grained",2,2,6,3,1,1,7,2,4.0],["0001208_200-Pos8-50kx.jpg",1208,8,200,16.57,10,0.5,8.49609,0.5,"fine grained",2,2,6,3,1,1,7,2,4.0],["0001208_400-Pos8-50kx.jpg",1208,8,400,16.57,10,0.5,8.49609,0.5,"fine grained",3,2,6,3,1,1,14,2,4.0],["0001208_400-Pos7-50kx.jpg",1208,7,400,21.98,10,0.5,7.88422,0.5,"fine grained",3,2,6,3,1,1,14,2,4.0],["1697_Pos1_50kx_cropped.jpg",1697,1,500,74.52808,0,1.2,100.0,1.0,"fine grained",4,6,1,6,3,6,54,2,4.0],["1697_Pos2_50kx_cropped.jpg",1697,2,500,69.10067,0,1.2,100.0,1.0,"fine grained",4,6,1,6,3,6,54,2,4.0],["4203_300_Pos06_50kx.jpg",4203,6,300,0.0,3,1.0,10.0,0.5,"facetted-oriented",3,1,2,5,1,1,13,2,4.0],["4203_400_Pos06_50kx.jpg",4203,6,400,0.0,3,1.0,10.0,0.5,"facetted-oriented",3,1,2,5,1,1,13,2,4.0],["1697_Pos9_50kx_cropped.jpg",1697,9,500,11.3178,0,1.2,100.0,1.0,"smooth-facetted",4,1,1,6,3,6,26,2,4.0],["1697_Pos10_50kx_cropped.jpg",1697,10,500,7.88694,0,1.2,100.0,1.0,"smooth-facetted",4,1,1,6,3,6,26,2,4.0],["4203_200_Pos06_50kx.jpg",4203,6,200,0.0,3,1.0,10.0,0.5,"facetted-oriented",2,1,2,5,1,1,6,1,8.0],["1660-Pos8-50kx_ergebnis.jpg",1660,8,500,11.37452,0,1.0,7.9607,0.5,"facetted",4,1,1,5,1,1,21,1,8.0],["1697_Pos5_50kx_cropped.jpg",1697,5,500,42.69847,0,1.2,100.0,1.0,"smooth-facetted",4,4,1,6,3,6,44,1,8.0],["1678-Pos6-50kx_ergebnis.jpg",1678,6,500,21.70199,0,1.2,38.27124,1.0,"facetted",4,2,1,6,2,6,33,2,4.0],["1678-Pos7-50kx_ergebnis.jpg",1678,7,500,14.17013,0,1.2,38.30066,1.0,"facetted",4,2,1,6,2,6,33,2,4.0],["1663-Pos6-50kx_ergebnis.jpg",1663,6,500,28.28568,0,1.0,41.73417,0.5,"facetted",4,3,1,5,2,1,36,1,8.0],["1680-Pos2-50kx_ergebnis.jpg",1680,2,500,66.92915,0,1.0,106.75453,0.5,"featureless",4,6,1,5,4,1,52,1,8.0],["1680-Pos8-50kx_ergebnis.jpg",1680,8,500,15.88576,0,1.0,107.9607,0.5,"smooth-facetted",4,2,1,5,4,1,32,2,4.0],["1680-Pos7-50kx_ergebnis.jpg",1680,7,500,21.64282,0,1.0,107.42531,0.5,"smooth-facetted",4,2,1,5,4,1,32,2,4.0],["4203_500_Pos02_50kx.jpg",4203,2,500,0.0,3,0.12195122,2.8,0.5,"facetted",4,1,2,1,1,1,27,4,2.0],["4203_500_Pos03_50kx.jpg",4203,3,500,0.0,3,0.15625,4.6,0.5,"facetted",4,1,2,1,1,1,27,4,2.0],["4203_500_Pos04_50kx.jpg",4203,4,500,0.0,3,0.217391304,6.4,0.5,"facetted",4,1,2,1,1,1,27,4,2.0],["4203_500_Pos01_50kx.jpg",4203,1,500,0.0,3,0.1,1.0,0.5,"facetted",4,1,2,1,1,1,27,4,2.0],["1663-Pos5-50kx_ergebnis.jpg",1663,5,500,37.99573,0,1.0,41.04303,0.5,"facetted",4,4,1,5,2,1,41,2,4.0],["1663-Pos4-50kx_ergebnis.jpg",1663,4,500,48.17931,0,1.0,41.20415,0.5,"fine grained",4,4,1,5,2,1,41,2,4.0],["1660-Pos1-50kx_ergebnis.jpg",1660,1,500,70.3647,0,1.0,7.1438,0.5,"fine grained",4,6,1,5,1,1,50,1,8.0],["1660-Pos7-50kx_ergebnis.jpg",1660,7,500,19.50752,0,1.0,7.42531,0.5,"facetted",4,2,1,5,1,1,30,1,8.0],["3845_9_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3845,9,20,0.0,0,0.5,5.0,0.5,"facetted-oriented",1,1,1,3,1,1,2,1,8.0],["4203_800_Pos5_50kx.jpg",4203,5,800,0.0,3,0.357142857,8.2,0.5,"large facetted",6,1,2,2,1,1,63,1,8.0],["1697_Pos4_50kx_cropped.jpg",1697,4,500,52.8667,0,1.2,100.0,1.0,"fine grained",4,5,1,6,3,6,49,2,4.0],["1697_Pos3_50kx_cropped.jpg",1697,3,500,61.98123,0,1.2,100.0,1.0,"fine grained",4,5,1,6,3,6,49,2,4.0],["1680-Pos6-50kx_ergebnis.jpg",1680,6,500,29.94711,0,1.0,106.73417,0.5,"smooth-facetted",4,3,1,5,4,1,37,1,8.0],["1663-Pos9-50kx_ergebnis.jpg",1663,9,500,11.13652,0,1.0,43.49609,0.5,"facetted",4,1,1,5,2,1,22,1,8.0],["4203_650_Pos04_50kx.jpg",4203,4,650,0.0,3,0.217391304,6.4,0.5,"facetted",5,1,2,1,1,1,55,4,2.0],["4203_650_Pos03_50kx.jpg",4203,3,650,0.0,3,0.15625,4.6,0.5,"facetted",5,1,2,1,1,1,55,4,2.0],["4203_650_Pos01_50kx.jpg",4203,1,650,0.0,3,0.1,1.0,0.5,"facetted",5,1,2,1,1,1,55,4,2.0],["4203_650_Pos02_50kx.jpg",4203,2,650,0.0,3,0.12195122,2.8,0.5,"facetted",5,1,2,1,1,1,55,4,2.0],["0001208_200-Pos1-50kx.jpg",1208,1,200,54.85,10,0.5,7.1438,0.5,"fine grained",2,5,6,3,1,1,10,1,8.0],["0001208_400-Pos6-50kx.jpg",1208,6,400,27.42,10,0.5,7.22784,0.5,"fine grained",3,3,6,3,1,1,15,2,4.0],["0001208_400-Pos5-50kx.jpg",1208,5,400,32.9,10,0.5,6.43797,0.5,"fine grained",3,3,6,3,1,1,15,2,4.0],["0001208_600-Pos5-50kx.jpg",1208,5,600,32.9,10,0.5,6.43797,0.5,"facetted",5,3,6,3,1,1,59,2,4.0],["0001208_600-Pos6-50kx.jpg",1208,6,600,27.42,10,0.5,7.22784,0.5,"facetted",5,3,6,3,1,1,59,2,4.0],["0001208_600-Pos1-50kx.jpg",1208,1,600,54.85,10,0.5,7.1438,0.5,"facetted",5,5,6,3,1,1,61,1,8.0],["1660-Pos2-50kx_ergebnis.jpg",1660,2,500,61.98026,0,1.0,6.75453,0.5,"fine grained",4,5,1,5,1,1,45,2,4.0],["1660-Pos3-50kx_ergebnis.jpg",1660,3,500,53.50541,0,1.0,6.36527,0.5,"facetted",4,5,1,5,1,1,45,2,4.0],["0001208_600-Pos7-50kx.jpg",1208,7,600,21.98,10,0.5,7.88422,0.5,"facetted",5,2,6,3,1,1,58,2,4.0],["0001208_600-Pos8-50kx.jpg",1208,8,600,16.57,10,0.5,8.49609,0.5,"facetted",5,2,6,3,1,1,58,2,4.0],["1697_Pos7_50kx_cropped.jpg",1697,7,500,23.32804,0,1.2,100.0,1.0,"smooth-facetted",4,2,1,6,3,6,34,2,4.0],["1697_Pos8_50kx_cropped.jpg",1697,8,500,16.33817,0,1.2,100.0,1.0,"smooth-facetted",4,2,1,6,3,6,34,2,4.0],["1663-Pos3-50kx_ergebnis.jpg",1663,3,500,57.3453,0,1.0,41.36527,0.5,"fine grained",4,5,1,5,2,1,46,1,8.0],["1663-Pos7-50kx_ergebnis.jpg",1663,7,500,20.44061,0,1.0,42.42531,0.5,"facetted",4,2,1,5,2,1,31,2,4.0],["1663-Pos8-50kx_ergebnis.jpg",1663,8,500,15.166,0,1.0,42.9607,0.5,"facetted",4,2,1,5,2,1,31,2,4.0],["3824_9_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3824,9,500,0.0,0,0.5,205.0,0.5,"smooth-facetted",4,1,1,3,6,1,20,1,8.0],["4203_500_Pos06_50kx.jpg",4203,6,500,0.0,3,1.0,10.0,0.5,"facetted",4,1,2,5,1,1,29,1,8.0],["0001208_400-Pos1-50kx.jpg",1208,1,400,54.85,10,0.5,7.1438,0.5,"fine grained",3,5,6,3,1,1,17,1,8.0],["1680-Pos5-50kx_ergebnis.jpg",1680,5,500,40.52396,0,1.0,106.04303,0.5,"featureless",4,4,1,5,4,1,42,1,8.0],["1678-Pos4-50kx_ergebnis.jpg",1678,4,500,43.26505,0,1.2,38.30774,1.0,"facetted",4,4,1,6,2,6,43,1,8.0],["3845_10_50kx_20kV_WD10_ergebnis_ergebnis.jpg",3845,10,20,0.0,0,1.0,10.0,0.5,"facetted-oriented",1,1,1,5,1,1,3,1,8.0],["1680-Pos9-50kx_ergebnis.jpg",1680,9,500,11.78733,0,1.0,108.49609,0.5,"smooth-facetted",4,1,1,5,4,1,23,1,8.0],["1678-Pos5-50kx_ergebnis.jpg",1678,5,500,31.68825,0,1.2,38.24183,1.0,"facetted",4,3,1,6,2,6,38,1,8.0],["1678-Pos3-50kx_ergebnis.jpg",1678,3,500,54.29247,0,1.2,38.37365,1.0,"fine grained",4,5,1,6,2,6,48,1,8.0],["4203_650_Pos06_50kx.jpg",4203,6,650,0.0,3,1.0,10.0,0.5,"facetted",5,1,2,5,1,1,57,1,8.0],["4203_200_Pos05_50kx.jpg",4203,5,200,0.0,3,0.357142857,8.2,0.5,"facetted-oriented",2,1,2,2,1,1,5,1,8.0],["4203_500_Pos05_50kx.jpg",4203,5,500,0.0,3,0.357142857,8.2,0.5,"facetted",4,1,2,2,1,1,28,1,8.0]]}
{"shape": "(1, 1, 64, 64)", "count": 1, "type": "Tensor"}
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]])
tensor([[0.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[1.0000],
        [0.0000],
        [0.5000],
        [0.0000],
        [0.0000],
        [0.0000]])
tensor([[1.0000],
        [0.0000],
        [0.5000],
        [0.0000],
        [0.0000],
        [0.0000]])
tensor([[1.0000],
        [0.0000],
        [0.5000],
        [0.0000],
        [0.0000],
        [0.0000]])
tensor([[1.0000],
        [0.0000],
        [0.5000],
        [0.0000],
        [0.0000],
        [0.0000]])
tensor([[1.0000],
        [0.0000],
        [0.5000],
        [0.0000],
        [0.0000],
        [0.0000]])
tensor([[1.0000],
        [0.0000],
        [0.5000],
        [0.0000],
        [0.0000],
        [0.0000]])
tensor([[1.0000],
        [0.0000],
        [0.5000],
        [0.0000],
        [0.0000],
        [0.0000]])
tensor([[1.0000],
        [0.0000],
        [0.5000],
        [0.0000],
        [0.0000],
        [0.0000]])
tensor([[1.0000],
        [0.0000],
        [0.5000],
        [0.0000],
        [0.0000],
        [0.0000]])
tensor([[1.0000],
        [0.0000],
        [0.5000],
        [0.0000],
        [0.0000],
        [0.0000]])
tensor([[1.0000],
        [0.0000],
        [0.5000],
        [0.0000],
        [0.0000],
        [0.0000]])
tensor([[0.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.]])
tensor([[0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [0.]])
tensor([[0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [0.]])
tensor([[0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [0.]])
tensor([[0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [0.]])
tensor([[0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [0.]])
tensor([[0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [0.]])
tensor([[0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [0.]])
tensor([[0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [0.]])
tensor([[0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [0.]])
tensor([[0.],
        [0.],
        [0.],
        [1.],
        [0.],
